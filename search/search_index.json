{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to BearCart Welcome to the realm of behavioral cloning karting. BearCart is an autonomous driving project. The goal is to tinker an off-the-shelf RC car into an AI powered self-driving platform. The software is running on a Raspberry Pi 5 SBC with its native operating system: Raspberry Pi OS. This project is strongly inspired by the DonkeyCar project.","title":"Home"},{"location":"#welcome-to-bearcart","text":"Welcome to the realm of behavioral cloning karting. BearCart is an autonomous driving project. The goal is to tinker an off-the-shelf RC car into an AI powered self-driving platform. The software is running on a Raspberry Pi 5 SBC with its native operating system: Raspberry Pi OS. This project is strongly inspired by the DonkeyCar project.","title":"Welcome to BearCart"},{"location":"BOM/","text":"Bill of Materials Part List The total cost for building a BearCart from the listed items below is around $250. Although, you can always find cheaper replacement for pretty much every single item in the list. Item Description Qty. Unit Price MEW4 1/16 RC Car Powered by brushed 390 motor 1 $98.88 Raspberry Pi 5 1 SBC for running AI autopilot and other Python scripts 1 $60.00 RPi Camera V2 2 Eye of the BearCart, 8-megapixel 1 $12.50 Camera Cable 3 200mm 22 pin to 15 pin 1 $1.20 Raspberry Pi 27W Power Supply Delivers a maximum of 5.1V, 5A to RPi 5 1 $13.60 Micro-HDMI to Standard HDMI Cable Connect monitor to RPi 5 1 $5.56 MicroSD Card 64GB, U3, A2 1 $11.27 Raspberry Pi Pico Microcontroller listens to RPi commands and controls drivetrain 1 $5.00 Micro USB Cable Micro-USB to USB-A, data capable 1 $2.67 QUICRUN 1060 ESC 4 60 Amp continuous current and a 6V3A BEC integrated 1 $21.99 Wireless Game Pad 5 Bluetooth 1 $19.99 Adjustable Buck Converter 6 6V - 32V to 1.5V - 32V 1 $12.49 Lever Wire Splitter 2-in, 4-out 1 $1.59 T-Plug Connector One pair of male and female, bridges battery and ESC 1 $1.60 Male JST Plug Connector Wires Connect voltage converter and RPi 1 $0.33 Female JST Plug Connector Wires Connect voltage converter and RPi 2 $0.33 Dupont Jumper Wires, Male to Female Connect Pico and drivetrain 4 < $0.1 Dupont Jumper Wires, Male to Male Connect Pico and drivetrain 4 < $0.1 M2*15 Female Standffs Attach Pico to the bed 4 < $0.1 M2*6 Screws Secure units 14 < $0.1 M2 Nuts Secure units 6 < $0.1 M2.5*15 Male-Female Standoffs Lift PCBs up 8 < $0.1 M2.5 Nuts secure screws and standoffs on the bed 16 < $0.1 M2.5*6 Screws Attach PCBs to the bed 12 < $0.1 M2.5*16 Screws Attach wire splitter to the bed 2 < $0.1 3D Printed Bed Hosts above components 1 ~ $1.21 3D Printed Camera Mount Holds RPi camera 1 < $0.1 1 : 8GB RAM and accessories are optional 2 : V1, V3 or V4 cameras are fine 3 : Don't be tricked by the Display Cable 4 : Electronic speed controller. Other brands and products are OK, but make sure the unit DOES NOT have radio receiver (antenna) integrated. 5 : Any generic gamepad on the market should work. Get a bluetooth one if you want your BearCart and the gamepad to be one-on-one tethered (You'll want this when you are managing multiple BearCarts). 6 : Get a dedicated DC-DC Buck converter with 5V/8A output, if not interested in monitoring the battery health or need more space on the board. Peripherals We recommend beginners to connect following peripherals to the Raspberry Pi. For advanced users/developers, they are optional. Item Requirement Qty. Monitor Has HDMI port 1 Keyboard USB connector 1 Mouse USB connector 1","title":"Bill of Materials"},{"location":"BOM/#bill-of-materials","text":"","title":"Bill of Materials"},{"location":"BOM/#part-list","text":"The total cost for building a BearCart from the listed items below is around $250. Although, you can always find cheaper replacement for pretty much every single item in the list. Item Description Qty. Unit Price MEW4 1/16 RC Car Powered by brushed 390 motor 1 $98.88 Raspberry Pi 5 1 SBC for running AI autopilot and other Python scripts 1 $60.00 RPi Camera V2 2 Eye of the BearCart, 8-megapixel 1 $12.50 Camera Cable 3 200mm 22 pin to 15 pin 1 $1.20 Raspberry Pi 27W Power Supply Delivers a maximum of 5.1V, 5A to RPi 5 1 $13.60 Micro-HDMI to Standard HDMI Cable Connect monitor to RPi 5 1 $5.56 MicroSD Card 64GB, U3, A2 1 $11.27 Raspberry Pi Pico Microcontroller listens to RPi commands and controls drivetrain 1 $5.00 Micro USB Cable Micro-USB to USB-A, data capable 1 $2.67 QUICRUN 1060 ESC 4 60 Amp continuous current and a 6V3A BEC integrated 1 $21.99 Wireless Game Pad 5 Bluetooth 1 $19.99 Adjustable Buck Converter 6 6V - 32V to 1.5V - 32V 1 $12.49 Lever Wire Splitter 2-in, 4-out 1 $1.59 T-Plug Connector One pair of male and female, bridges battery and ESC 1 $1.60 Male JST Plug Connector Wires Connect voltage converter and RPi 1 $0.33 Female JST Plug Connector Wires Connect voltage converter and RPi 2 $0.33 Dupont Jumper Wires, Male to Female Connect Pico and drivetrain 4 < $0.1 Dupont Jumper Wires, Male to Male Connect Pico and drivetrain 4 < $0.1 M2*15 Female Standffs Attach Pico to the bed 4 < $0.1 M2*6 Screws Secure units 14 < $0.1 M2 Nuts Secure units 6 < $0.1 M2.5*15 Male-Female Standoffs Lift PCBs up 8 < $0.1 M2.5 Nuts secure screws and standoffs on the bed 16 < $0.1 M2.5*6 Screws Attach PCBs to the bed 12 < $0.1 M2.5*16 Screws Attach wire splitter to the bed 2 < $0.1 3D Printed Bed Hosts above components 1 ~ $1.21 3D Printed Camera Mount Holds RPi camera 1 < $0.1 1 : 8GB RAM and accessories are optional 2 : V1, V3 or V4 cameras are fine 3 : Don't be tricked by the Display Cable 4 : Electronic speed controller. Other brands and products are OK, but make sure the unit DOES NOT have radio receiver (antenna) integrated. 5 : Any generic gamepad on the market should work. Get a bluetooth one if you want your BearCart and the gamepad to be one-on-one tethered (You'll want this when you are managing multiple BearCarts). 6 : Get a dedicated DC-DC Buck converter with 5V/8A output, if not interested in monitoring the battery health or need more space on the board.","title":"Part List"},{"location":"BOM/#peripherals","text":"We recommend beginners to connect following peripherals to the Raspberry Pi. For advanced users/developers, they are optional. Item Requirement Qty. Monitor Has HDMI port 1 Keyboard USB connector 1 Mouse USB connector 1","title":"Peripherals"},{"location":"assembly/","text":"Hardware Assembly Guide We recommend you to follow the following order to assemble your BearCart. 1 Standoffs Item Qty. Male M2.5*15 standoff 8 M2.5 nut 8 Female M2*15 standoff 4 M2*6 screw 4 There are pockets at the bottom side of the bed. Place nuts or screws into those pockets and tighten the standoffs by hands. 2 Camera Item Qty. 3D-Printed camera mount 1 RPi Camera module 1 CSI camera cable 1 M2.5*6 screw 2-4 M2.5 nut 2-4 M2*6 screw 2-4 M2 nut 2-4 2.1 Install Camera Mount on Bed 2.2 Install Pi Camera 3 Wire Splitter Item Qty. Wire splitter 1 M2.5*16 screw 2 M2.5 nut 2 Female T-plug connector w/ wires 1 Male T-plug connector w/ wires 1 Female JST connector w/ wires 1 4 Buck Converter Item Qty. Step-Down (BUCK) converter 1 M2.5*6 screw 4 Male JST connector w/ wires 1 Female JST connector w/ wires 1 Note the arrow pointing direction below the LCD screen 5 Pico Item Qty. RPi Pico 1 M2*6 screw 2-4 Male-to-Male Dupont jumper wire 1 Male-to-Female Dupont jumper wire 4 Micro-USB to USB-A cable 1 Double-Sided tape 1 Pico's GP0 , GP15 and 2 GND pins will be employed later to control the ESC and the servo motor. Please refer to the Wiring Guide for more details. 6 Raspberry Pi Item Qty. Raspberry Pi 5 1 M2.5*6 screw 2-4 7 Replace ESC Item Qty. QuicRun 1060 brushed ESC 1 M2*6 screw 2 M2 nut 2 Double-Sided tape 2 Unplug motor power wires (blue and yellow) from the stock ESC. Plug the motor power wires to blue and yellow wires on the new ESC The new ESC can be seated on top of the servo motor. Wire up ESC, servo motor and Pico For a more detailed guide on wiring, please go to the Wiring Guide page.","title":"Hardware Assembly Guide"},{"location":"assembly/#hardware-assembly-guide","text":"We recommend you to follow the following order to assemble your BearCart.","title":"Hardware Assembly Guide"},{"location":"assembly/#1-standoffs","text":"Item Qty. Male M2.5*15 standoff 8 M2.5 nut 8 Female M2*15 standoff 4 M2*6 screw 4 There are pockets at the bottom side of the bed. Place nuts or screws into those pockets and tighten the standoffs by hands.","title":"1 Standoffs"},{"location":"assembly/#2-camera","text":"Item Qty. 3D-Printed camera mount 1 RPi Camera module 1 CSI camera cable 1 M2.5*6 screw 2-4 M2.5 nut 2-4 M2*6 screw 2-4 M2 nut 2-4","title":"2 Camera"},{"location":"assembly/#21-install-camera-mount-on-bed","text":"","title":"2.1 Install Camera Mount on Bed"},{"location":"assembly/#22-install-pi-camera","text":"","title":"2.2 Install Pi Camera"},{"location":"assembly/#3-wire-splitter","text":"Item Qty. Wire splitter 1 M2.5*16 screw 2 M2.5 nut 2 Female T-plug connector w/ wires 1 Male T-plug connector w/ wires 1 Female JST connector w/ wires 1","title":"3 Wire Splitter"},{"location":"assembly/#4-buck-converter","text":"Item Qty. Step-Down (BUCK) converter 1 M2.5*6 screw 4 Male JST connector w/ wires 1 Female JST connector w/ wires 1 Note the arrow pointing direction below the LCD screen","title":"4 Buck Converter"},{"location":"assembly/#5-pico","text":"Item Qty. RPi Pico 1 M2*6 screw 2-4 Male-to-Male Dupont jumper wire 1 Male-to-Female Dupont jumper wire 4 Micro-USB to USB-A cable 1 Double-Sided tape 1 Pico's GP0 , GP15 and 2 GND pins will be employed later to control the ESC and the servo motor. Please refer to the Wiring Guide for more details.","title":"5 Pico"},{"location":"assembly/#6-raspberry-pi","text":"Item Qty. Raspberry Pi 5 1 M2.5*6 screw 2-4","title":"6 Raspberry Pi"},{"location":"assembly/#7-replace-esc","text":"Item Qty. QuicRun 1060 brushed ESC 1 M2*6 screw 2 M2 nut 2 Double-Sided tape 2 Unplug motor power wires (blue and yellow) from the stock ESC. Plug the motor power wires to blue and yellow wires on the new ESC The new ESC can be seated on top of the servo motor. Wire up ESC, servo motor and Pico For a more detailed guide on wiring, please go to the Wiring Guide page.","title":"7 Replace ESC"},{"location":"collect_data/","text":"Data Collection Guide Script Execution In a new RPi's terminal, run following command. python ~/BearCart/scripts/collect_data.py Usage Toggle Recording The default button for toggling data recording is R1 . Headlight will be toggled as well if it is correctly wired up. Press the button to activate/deactivate data recording. Emergency Stop The default button for EMERGENCY STOP is X . Press this button will terminate the execution of the Python script. Release throttle (right) joystick if a normal stop is expected. Saved Data A data directory will be automatically created once the collect_data.py script is executed. The data directory will be located at ~/BearCart/data/<year-month-day-hour-minute> . And it will be timestamped with the moment of executing the collect_data.py script. If toggle recording button was never pressed, the data directory will be empty. If data was effectively recorded, extra files will be saved in the timestamped data directory. An example of the data structure looks like the follows. BearCart/data/2024-08-13-15-05/ \u251c\u2500\u2500 images/ \u2514\u2500\u2500 labels.csv The images directory stores all the images recorded during the data collection process. The saved images will be indexed follow the chronological order. The labels.csv file stores the \"image file names\", \"human input steering values\" and \"human input throttle values\". These files are organized in 3 columns. And each row stands for the human operator's action at the moment of the corresponding image was captured.","title":"Data Collection Guide"},{"location":"collect_data/#data-collection-guide","text":"","title":"Data Collection Guide"},{"location":"collect_data/#script-execution","text":"In a new RPi's terminal, run following command. python ~/BearCart/scripts/collect_data.py","title":"Script Execution"},{"location":"collect_data/#usage","text":"","title":"Usage"},{"location":"collect_data/#toggle-recording","text":"The default button for toggling data recording is R1 . Headlight will be toggled as well if it is correctly wired up. Press the button to activate/deactivate data recording.","title":"Toggle Recording"},{"location":"collect_data/#emergency-stop","text":"The default button for EMERGENCY STOP is X . Press this button will terminate the execution of the Python script. Release throttle (right) joystick if a normal stop is expected.","title":"Emergency Stop"},{"location":"collect_data/#saved-data","text":"A data directory will be automatically created once the collect_data.py script is executed. The data directory will be located at ~/BearCart/data/<year-month-day-hour-minute> . And it will be timestamped with the moment of executing the collect_data.py script. If toggle recording button was never pressed, the data directory will be empty. If data was effectively recorded, extra files will be saved in the timestamped data directory. An example of the data structure looks like the follows. BearCart/data/2024-08-13-15-05/ \u251c\u2500\u2500 images/ \u2514\u2500\u2500 labels.csv The images directory stores all the images recorded during the data collection process. The saved images will be indexed follow the chronological order. The labels.csv file stores the \"image file names\", \"human input steering values\" and \"human input throttle values\". These files are organized in 3 columns. And each row stands for the human operator's action at the moment of the corresponding image was captured.","title":"Saved Data"},{"location":"deploy/","text":"Coming Soon...","title":"Autopilot Deployment Guide"},{"location":"quick_start/","text":"Getting Started Software Installation Fire up the terminal on your Raspberry Pi, and run following commands in it. Install Dependencies sudo apt install python3-pip pip install pip --upgrade --break-system-packages Clone The Repository cd ~ git clone https://github.com/UCAEngineeringPhysics/BearCart.git Install Python Packages cd ~/BearCart pip install -r requirements.txt --break-system-packages Data Collection (on Raspberry Pi) python ~/BearCart/scripts/collect_data.py Autopilot Model Training (on server) python ~/BearCart/scripts/train.py <data directory name in format: year-month-date-hour-minute> Autopilot Deployment (on Raspberry Pi) python ~/BearCart/scripts/autopilot.py","title":"Quick Start"},{"location":"quick_start/#getting-started","text":"","title":"Getting Started"},{"location":"quick_start/#software-installation","text":"Fire up the terminal on your Raspberry Pi, and run following commands in it. Install Dependencies sudo apt install python3-pip pip install pip --upgrade --break-system-packages Clone The Repository cd ~ git clone https://github.com/UCAEngineeringPhysics/BearCart.git Install Python Packages cd ~/BearCart pip install -r requirements.txt --break-system-packages","title":"Software Installation"},{"location":"quick_start/#data-collection-on-raspberry-pi","text":"python ~/BearCart/scripts/collect_data.py","title":"Data Collection (on Raspberry Pi)"},{"location":"quick_start/#autopilot-model-training-on-server","text":"python ~/BearCart/scripts/train.py <data directory name in format: year-month-date-hour-minute>","title":"Autopilot Model Training (on server)"},{"location":"quick_start/#autopilot-deployment-on-raspberry-pi","text":"python ~/BearCart/scripts/autopilot.py","title":"Autopilot Deployment (on Raspberry Pi)"},{"location":"software/","text":"Software Installation and Test Guide 1 BearCart Software Installation Open Raspberry Pi's terminal window and follow the steps below: 1.1 Install dependencies: sudo apt install python3-pip pip install pip --upgrade --break-system-packages 1.2 Download BearCart repository cd ~ git clone https://github.com/UCAEngineeringPhysics/BearCart.git 1.3 Install Python packages cd ~/BearCart pip install -r requirements.txt --break-system-packages 2. Software on Pico Pico is a microcontroller. It bridges the Raspberry Pi and the drivetrain (ESC and servo) of BearCart. Raspberry Pi sends desired propelling and turning commands to Pico. Pico translates them into the PWM signals then sends them to the drivetrain. The code running on Pico is located at BearCart/scripts/pico/ . 2.1 Upload MicroPython Firmware to Pico The MicroPython firmware allows Pico to execute Python code. Please follow the instructions in the Getting started with Raspberry Pi Pico guide. 2.2 Calibrate ESC and Servo Make sure you have followed the Wiring Guide to connect Pico to Raspberry Pi, ESC and servo. If using Thonny, remember to set your Python interpreter to MicroPython at the bottom right corner. Run esc_servo_test.py . Take down the duty cycle values steer the front wheels all the way to the left, all way to the right and middle. Run esc_throttle_test.py . CAUTION: lift the BearCart up, and make sure nothing has contact with any tire! Take down the duty cycle values/ranges that spin the throttle motor forward at its maximum speed, spin it reversely at its maximum speed, and stop it. 2.3 Upload the Command Listener Script to Pico Upload or save main.py to Pico. If using Thonny, you'll notice the file name becomes [main.py] . 2. Software on Raspberry Pi 2.1 Update Configurations Open up configs.json in a text editor. Change the follwing lines according to servo calibration results \"steering_left\": 1000000, \"steering_right\": 2000000, \"steering_center\": 1500000, \"steering_range\": 500000, Change the following lines according to throttle calibration results \"throttle_stall\": 1210000, \"throttle_fwd_range\": 590000, \"throttle_rev_range\": 120000, 2.2 Unit Test All the unit testing scripts are located at BearCart/scripts/unit_test Test Raspberry Pi camera module: camera.py . CAUTION: power down Raspberry Pi before connect/disconnect the camera Test gamepad: joystick.py . Make sure the gamepad is connected via bluetooth. Test steering command transmitting: serial_steering.py . Test throttle command transmitting: serial_throttle.py . Integration test: camera_joystick_drivetrain.py .","title":"Software Installation and Test Guide"},{"location":"software/#software-installation-and-test-guide","text":"","title":"Software Installation and Test Guide"},{"location":"software/#1-bearcart-software-installation","text":"Open Raspberry Pi's terminal window and follow the steps below:","title":"1 BearCart Software Installation"},{"location":"software/#11-install-dependencies","text":"sudo apt install python3-pip pip install pip --upgrade --break-system-packages","title":"1.1 Install dependencies:"},{"location":"software/#12-download-bearcart-repository","text":"cd ~ git clone https://github.com/UCAEngineeringPhysics/BearCart.git","title":"1.2 Download BearCart repository"},{"location":"software/#13-install-python-packages","text":"cd ~/BearCart pip install -r requirements.txt --break-system-packages","title":"1.3 Install Python packages"},{"location":"software/#2-software-on-pico","text":"Pico is a microcontroller. It bridges the Raspberry Pi and the drivetrain (ESC and servo) of BearCart. Raspberry Pi sends desired propelling and turning commands to Pico. Pico translates them into the PWM signals then sends them to the drivetrain. The code running on Pico is located at BearCart/scripts/pico/ .","title":"2. Software on Pico"},{"location":"software/#21-upload-micropython-firmware-to-pico","text":"The MicroPython firmware allows Pico to execute Python code. Please follow the instructions in the Getting started with Raspberry Pi Pico guide.","title":"2.1 Upload MicroPython Firmware to Pico"},{"location":"software/#22-calibrate-esc-and-servo","text":"Make sure you have followed the Wiring Guide to connect Pico to Raspberry Pi, ESC and servo. If using Thonny, remember to set your Python interpreter to MicroPython at the bottom right corner. Run esc_servo_test.py . Take down the duty cycle values steer the front wheels all the way to the left, all way to the right and middle. Run esc_throttle_test.py . CAUTION: lift the BearCart up, and make sure nothing has contact with any tire! Take down the duty cycle values/ranges that spin the throttle motor forward at its maximum speed, spin it reversely at its maximum speed, and stop it.","title":"2.2 Calibrate ESC and Servo"},{"location":"software/#23-upload-the-command-listener-script-to-pico","text":"Upload or save main.py to Pico. If using Thonny, you'll notice the file name becomes [main.py] .","title":"2.3 Upload the Command Listener Script to Pico"},{"location":"software/#2-software-on-raspberry-pi","text":"","title":"2. Software on Raspberry Pi"},{"location":"software/#21-update-configurations","text":"Open up configs.json in a text editor. Change the follwing lines according to servo calibration results \"steering_left\": 1000000, \"steering_right\": 2000000, \"steering_center\": 1500000, \"steering_range\": 500000, Change the following lines according to throttle calibration results \"throttle_stall\": 1210000, \"throttle_fwd_range\": 590000, \"throttle_rev_range\": 120000,","title":"2.1 Update Configurations"},{"location":"software/#22-unit-test","text":"All the unit testing scripts are located at BearCart/scripts/unit_test Test Raspberry Pi camera module: camera.py . CAUTION: power down Raspberry Pi before connect/disconnect the camera Test gamepad: joystick.py . Make sure the gamepad is connected via bluetooth. Test steering command transmitting: serial_steering.py . Test throttle command transmitting: serial_throttle.py . Integration test: camera_joystick_drivetrain.py .","title":"2.2 Unit Test"},{"location":"train/","text":"Coming Soon...","title":"Autopilot Training Guide"},{"location":"wiring/","text":"Electric Wiring Guide Color coding the positive and negative power lines is extremely recommended. 1 Split Battery Power The LiPo battery will provide power for all the electric components. A wire splitter is employed to separate the power for the drivetrain from the power for the computing devices. 2 Powering Drivetrain The Electronic Speed Controller (ESC) is in charge of regulate the speed and direction of the main engine (a DC motor), as well as providing power to the steering system (a servo motor) through a Battery Eliminator Circuit (BEC). The ESC and the servo motor can receive signals through their JST connectors. There are two widely used color codes for these connections. 3 Powering Computers The computing devices are strict on the power sources. We use a step-down converter (BUCK converter) to lower the battery output voltage (7.4V nominal) to 5V. 4 GPIO Wiring Raspberry Pi Pico is a micro-controller. It will send digital signals to the ESC and the servo motor to regulate throttle and steering of the BearCart. The GPIO pins as shown in the diagram below are the default setting. Other GPIO pins can be used. TODO LED wiring","title":"Wiring Guide"},{"location":"wiring/#electric-wiring-guide","text":"Color coding the positive and negative power lines is extremely recommended.","title":"Electric Wiring Guide"},{"location":"wiring/#1-split-battery-power","text":"The LiPo battery will provide power for all the electric components. A wire splitter is employed to separate the power for the drivetrain from the power for the computing devices.","title":"1 Split Battery Power"},{"location":"wiring/#2-powering-drivetrain","text":"The Electronic Speed Controller (ESC) is in charge of regulate the speed and direction of the main engine (a DC motor), as well as providing power to the steering system (a servo motor) through a Battery Eliminator Circuit (BEC). The ESC and the servo motor can receive signals through their JST connectors. There are two widely used color codes for these connections.","title":"2 Powering Drivetrain"},{"location":"wiring/#3-powering-computers","text":"The computing devices are strict on the power sources. We use a step-down converter (BUCK converter) to lower the battery output voltage (7.4V nominal) to 5V.","title":"3 Powering Computers"},{"location":"wiring/#4-gpio-wiring","text":"Raspberry Pi Pico is a micro-controller. It will send digital signals to the ESC and the servo motor to regulate throttle and steering of the BearCart. The GPIO pins as shown in the diagram below are the default setting. Other GPIO pins can be used.","title":"4 GPIO Wiring"},{"location":"wiring/#todo","text":"LED wiring","title":"TODO"}]}